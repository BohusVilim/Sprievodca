// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sprievodca.Data;

#nullable disable

namespace Sprievodca.Migrations
{
    [DbContext(typeof(SprievodcaDbContext))]
    [Migration("20230428141052_fb")]
    partial class fb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Sprievodca.Models.MainModels.Area", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("ExistSubArea")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Sprievodca.Models.MainModels.Region", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Sprievodca.Models.MainModels.Route", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lenght")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<long>("SectorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Sprievodca.Models.MainModels.Sector", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SubAreaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("SubAreaId");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("Sprievodca.Models.MainModels.SubArea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("SubAreas");
                });

            modelBuilder.Entity("Sprievodca.Models.MainModels.Area", b =>
                {
                    b.HasOne("Sprievodca.Models.MainModels.Region", "Region")
                        .WithMany("Areas")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Sprievodca.Models.MainModels.Route", b =>
                {
                    b.HasOne("Sprievodca.Models.MainModels.Sector", "Sector")
                        .WithMany("Routes")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("Sprievodca.Models.MainModels.Sector", b =>
                {
                    b.HasOne("Sprievodca.Models.MainModels.Area", "Area")
                        .WithMany("Sectors")
                        .HasForeignKey("AreaId");

                    b.HasOne("Sprievodca.Models.MainModels.SubArea", "SubArea")
                        .WithMany("Sectors")
                        .HasForeignKey("SubAreaId");

                    b.Navigation("Area");

                    b.Navigation("SubArea");
                });

            modelBuilder.Entity("Sprievodca.Models.MainModels.SubArea", b =>
                {
                    b.HasOne("Sprievodca.Models.MainModels.Area", "Area")
                        .WithMany("SubArea")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Sprievodca.Models.MainModels.Area", b =>
                {
                    b.Navigation("Sectors");

                    b.Navigation("SubArea");
                });

            modelBuilder.Entity("Sprievodca.Models.MainModels.Region", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("Sprievodca.Models.MainModels.Sector", b =>
                {
                    b.Navigation("Routes");
                });

            modelBuilder.Entity("Sprievodca.Models.MainModels.SubArea", b =>
                {
                    b.Navigation("Sectors");
                });
#pragma warning restore 612, 618
        }
    }
}
